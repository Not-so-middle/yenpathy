% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shortest_path.R
\name{shortest_path}
\alias{shortest_path}
\title{Return k shortest paths through a weighted graph.}
\usage{
shortest_path(start_vertex, end_vertex, vertex_num, graph_df,
  edge_penalty = 0)
}
\arguments{
\item{start_vertex}{The number of the path's starting vertex.}

\item{end_vertex}{The number of the path's ending vertex.}

\item{vertex_num}{The total number of vertices in the graph.}

\item{graph_df}{A data frame representing the graph's edges. The first column should be an integer of starting vertices; the second should be an integer of ending vertices, and the third should be a numeric representing the weight or cost of that edge.}

\item{edge_penalty}{A constant to be added to each edge, if you wish to penalize routes with many edges.}
}
\value{
A numeric vector representing path through the network.
}
\description{
This function constructs a graph in C++ and uses Dijkstra's Algorithm to find shortest path through the graph, starting and ending at specified nodes.
}
\examples{
k_shortest_paths(start_vertex = 1, end_vertex = 6, k = 4, vertex_num = 8, graph_df = penalty_test)
k_shortest_paths(start_vertex = 1, end_vertex = 6, k = 4, vertex_num = 8, graph_df = penalty_test, edge_penalty = 2)

}
