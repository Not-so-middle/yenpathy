// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// shortest_path
Rcpp::CharacterVector shortest_path(Rcpp::IntegerVector start_vertex, Rcpp::IntegerVector end_vertex, Rcpp::IntegerVector vertex_num, Rcpp::DataFrame graph_df);
RcppExport SEXP _yenpathy_shortest_path(SEXP start_vertexSEXP, SEXP end_vertexSEXP, SEXP vertex_numSEXP, SEXP graph_dfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type start_vertex(start_vertexSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type end_vertex(end_vertexSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type vertex_num(vertex_numSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type graph_df(graph_dfSEXP);
    rcpp_result_gen = Rcpp::wrap(shortest_path(start_vertex, end_vertex, vertex_num, graph_df));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_yenpathy_shortest_path", (DL_FUNC) &_yenpathy_shortest_path, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_yenpathy(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
